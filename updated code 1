let config = {
	address: "localhost",
	port: 8080,
	ipWhitelist: ["127.0.0.1", "::ffff:127.0.0.1", "::1"],

	language: "en",
	locale: "en-US",
	timeFormat: 24,
	units: "metric",

	modules: [
		{
			module: "alert",
		},
		{
			module: 'MMM-Face-Reco-DNN',
			config: {
				logoutDelay: 15000,
				checkInterval: 2000,
				noFaceClass: 'noface',
				unknownClass: 'unknown',
				knownClass: 'known',
				defaultClass: 'default',
				everyoneClass: 'everyone',
				alwaysClass: 'always',
				cascade: 'modules/MMM-Face-Reco-DNN/model/haarcascade_frontalface_default.xml',
				encodings: 'modules/MMM-Face-Reco-DNN/model/encodings.pickle',
				brightness: 0,
				contrast: 0,
				rotateCamera: -1,
				method: 'dnn',
				detectionMethod: 'hog',
				animationSpeed: 0,
				pythonPath: null,
				welcomeMessage: false,
				extendDataset: false,
				dataset: 'modules/MMM-Face-Reco-DNN/dataset/',
				tolerance: 0.6,
				multiUser: 0,
				resolution: [640, 480],
				processWidth: 300,
				outputmm: 0,
				debug: 1,  // Enable debugging to get more information in console
			}
		},
		{
			module: "MMM-NotificationTrigger",
			config: {
				triggers: [
					{
						trigger: "FACE_DETECTED",
						triggerSenderFilter: (sender) => sender === 'MMM-Face-Reco-DNN',
						fires: [
							{
								fire: "SHOW_COMPLIMENT",
								payload: (payload) => "Hey there, " + payload.name + "!"
							},
							{
								fire: "SHOW_MODULES"
							}
						]
					},
					{
						trigger: "NO_FACE_DETECTED",
						triggerSenderFilter: (sender) => sender === 'MMM-Face-Reco-DNN',
						fires: [
							{
								fire: "HIDE_MODULES"  // Hide all modules
							}
						]
					}
				],
				log: true // Enable logging for notification triggers
			}
		}
	]
};

/*************** DO NOT EDIT THE LINE BELOW ***************/
if (typeof module !== "undefined") { module.exports = config; }
